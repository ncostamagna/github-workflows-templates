name: Deploy con Serverless Framework

on:
  workflow_call:
    inputs:
      go-version:
        description: "Set Go version"
        default: 1.22
        type: string
      sam-version:
        description: "SAM version"
        default: 1.23.0
        type: string

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
  issues: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref_name == 'main') && 'prod' || (github.ref_name == 'qa' ) && 'qa' || 'qa' }}
    steps:
      - run: echo "Exposing branch"
  serverless:
    needs: prepare
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.prepare.outputs.branch }}
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
      issues: write
    steps:
      - run: echo ${{ github.ref_name }}
      - run: echo ${{ needs.prepare.outputs.branch }}
      - uses: actions/checkout@v4
      - name: Export secret as env
        if: ${{ env.secret != 'null' }}
        run: echo "$secret" | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_ENV
        env: 
          secret: ${{ toJson(secrets) }}
      - name: Export vars as env
        if: ${{ env.var != 'null' }}
        env:
          var: ${{ toJson(vars) }}
        run: echo "$var" | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_ENV
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go-version }}
      #- uses: actions/setup-python@v2
      #- run: pip install wheel setuptools pip --upgrade
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          version: ${{ inputs.sam-version }}
      - name: Serverless deploy
        run: |
          sam build --use-container
          sam package --template-file template.yaml --output-template-file output.yaml
          sam deploy --template-file output.yaml
